pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="540866440846"
        AWS_DEFAULT_REGION="ap-south-1"
        IMAGE_REPO_NAME="sample"
        IMAGE_TAG="v1"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
   
    stages {

        stages {
            //     stage('Build and upload docker api image') {
                    
            //         steps {

            //             script {
                            
            //                 withAWS(region: AWS_REGION) {
            //                     def login = ecrLogin()
            //                     sh script: login, label: "Log into ECR"
            //                 }
            //                 //docker build  --build-arg BEHAVIOSENSE_EAR=deployments/behaviosenseapplication_v5.0.x_jboss_mysql_api.ear
            //                 sh script: "docker build deploy-images -t .", label: "Build docker image"
                            
            //                 sh script: "docker push $SERVICE_DOCKER_IMAGE_BACKEND", label: "Push docker image"

            //             }
            //         }
            //     }

            // } // stages

        
         stage('Logging into AWS ECR') {
            steps {
                script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
                 
            }
        }
        
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/mohiniphatak/terraform-jenkins.git']]])     
            }
        }
  
    // Building Docker images
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
        }
      }
    }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
                sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
         }
        }
      }
    }
    }
}